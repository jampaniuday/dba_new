CREATE OR REPLACE PACKAGE PARTITION_MANAGER IS
	FUNCTION GET_PARTITION_COLUMN(P_OWNER IN VARCHAR2, P_TABLE_NAME IN VARCHAR2) RETURN VARCHAR2;
	FUNCTION LONG_COLUMN(P_QUERY IN VARCHAR2, P_FIRST_BIND IN VARCHAR2, P_FIRST_BIND_VALUE IN VARCHAR2, P_SECOND_BIND IN VARCHAR2, P_SECOND_BIND_VALUE IN VARCHAR2, P_THIRD_BIND IN VARCHAR2, P_THIRD_BIND_VALUE IN VARCHAR2)
		RETURN VARCHAR2;
	PROCEDURE MOVE_PARTITIONS_FOR_DATES(P_OWNER IN VARCHAR2, P_SOURCE_TABLE VARCHAR2, P_TEMP_TABLE VARCHAR2, P_DEST_TABLE VARCHAR2, P_FROM IN DATE, P_TO IN DATE);

	PROCEDURE DROP_PARTITIONS_FOR_DATES(P_OWNER IN VARCHAR2, P_TABLE VARCHAR2, P_FROM IN DATE, P_TO IN DATE);

	PROCEDURE ADD_PARTITION(P_OWNER IN VARCHAR2, P_TABLE IN VARCHAR2, P_DATE IN DATE);
	FUNCTION EXISTS_PARTITION(P_OWNER IN VARCHAR2, P_TABLE_NAME IN VARCHAR2, P_DATE IN DATE)
		RETURN BOOLEAN;

	FUNCTION GET_PARTITION_NAME(P_OWNER IN VARCHAR2, P_TABLE_NAME IN VARCHAR2, P_DATE IN DATE)
		RETURN VARCHAR2;

	PROCEDURE ALLOCATE_PARTITION(P_OWNER IN VARCHAR2, P_TABLE IN VARCHAR2, P_DATE IN DATE, P_PATH IN VARCHAR2, P_GROWTH_FACTOR IN NUMBER DEFAULT 1);
END PARTITION_MANAGER;
/
