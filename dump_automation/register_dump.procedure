CREATE OR REPLACE PROCEDURE register_dump (P_FILE_PATH VARCHAR2, p_temp_schema VARCHAR2, p_original_schema VARCHAR2, P_PID NUMBER) IS
  DUMMY NUMBER;
  L_ID  NUMBER;
  l_application_name VARCHAR2(100);
  l_generic_version  VARCHAR2(100);
BEGIN

  L_ID := AUTOMATION_REPO.DUMP_REPO_SEQ.NEXTVAL;

  EXECUTE IMMEDIATE  'INSERT INTO AUTOMATION_REPO.DUMP_REPOSITORY
    (ID, ORIGINAL_FILE_PATH, LAST_ALIVE_TIME, IC_VERSION, APP_VERSION, ORIGINAL_SCHEMA, PID)
    WITH SUB AS
     (SELECT ''' || P_FILE_PATH ||''' ORIGINAL_FILE_PATH,
             LAST_ALIVE_TIME,
             VERSION IC_VERSION,
             HOST_APP_VERSION APP_VERSION,
             ''' || p_original_schema ||''' ORIGINAL_SCHEMA, 
             ' || P_PID || ' PID 
      FROM   ' || P_TEMP_SCHEMA || '.IC_CNFG_INSTANCE T
      WHERE  STATUS = 1
      AND    TYPE = 1
      ORDER  BY LAST_ALIVE_TIME DESC),
    SUB2 AS
     (SELECT ' || to_char(L_ID) || ' ID, SUB.* FROM SUB WHERE ROWNUM < 2)
    SELECT * FROM SUB2';



      -- TODO: Use count(*) instead of unig exception !!!!

    -- Check that product version view exists (doesn't exist for ic);
    EXECUTE IMMEDIATE 'select count(*) from dba_views where owner = ''' || p_temp_schema || ''' and view_name = ''V_CURRENT_PRODUCT_VERSION'''
      INTO DUMMY;

    IF DUMMY = 1 THEN
    
       EXECUTE IMMEDIATE 'select application, full_version from ' || p_temp_schema || '.V_CURRENT_PRODUCT_VERSION' INTO l_application_name, l_generic_version;
       UPDATE automation_repo.DUMP_REPOSITORY t SET APP_NAME = l_application_name, generic_version = l_generic_version WHERE ID = l_id;
    END IF;    

    DBMS_OUTPUT.put_line(l_id);

  commit;
END;
/
